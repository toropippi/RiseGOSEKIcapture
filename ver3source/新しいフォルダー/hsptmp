#include "hspcl64.as"
#include "NNmodule.hsp"
//ここまで

	SKLALLSTR="ＫＯ術","アイテム使用強化","ガード強化","ガード性能","キノコ大好き","ジャンプ鉄人","スタミナ急速回復","スタミナ奪取","ひるみ軽減","フルチャージ","ブレ抑制","ボマー","ランナー","火事場力","火属性攻撃強化","火耐性","会心撃【属性】","回避距離ＵＰ","回避性能","回復速度","滑走強化","貫通弾・貫通矢強化","気絶耐性","鬼火纏","逆恨み","逆襲","強化持続","業物","見切り","幸運","広域化","攻めの守勢","攻撃","高速変形","剛刃研磨","散弾・拡散矢強化","死中に活","耳栓","弱点特効","集中","匠","乗り名人","植生学","心眼","水属性攻撃強化","水耐性","睡眠属性強化","睡眠耐性","精霊の加護","早食い","装填拡張","装填速度","速射強化","属性やられ耐性","体術","体力回復量ＵＰ","耐震","弾丸節約","弾導強化","地質学","挑戦者","超会心","通常弾・連射矢強化","泥雪耐性","笛吹き名人","砥石使用高速化","特殊射撃強化","毒属性強化","毒耐性","鈍器使い","納刀術","破壊王","剥ぎ取り鉄人","爆破やられ耐性","爆破属性強化","抜刀術【技】","抜刀術【力】","反動軽減","飛び込み","氷属性攻撃強化","氷耐性","不屈","風圧耐性","腹減り耐性","壁面移動","泡沫の舞","砲術","砲弾装填","防御","麻痺属性強化","麻痺耐性","満足感","陽動","雷属性攻撃強化","雷耐性","龍属性攻撃強化","龍耐性","力の解放","渾身","翔蟲使い","達人芸","NULL"


	//#N = 415676  # データの数
	//M = 512 # 1層
	//M2 = 256 # 2層
	//D = 128*22 # 入力層
	//K = 102

	N=30*2//7100*2
	mlpLayerNum=4
	dim mlpLayerNode,mlpLayerNum
	mlpLayerNode=128*22,512,256,102
	
	//GPUデバイスせセット
	HCLinit
	sdim GOSEKIcapture3Setting,4096
	notesel GOSEKIcapture3Setting
	noteload "GOSEKIcapture3Setting.txt"
	noteget p1,1
	HCLSetDevice int(p1)

	
	//X作成
	matX=HCLCreateBuffer(N*mlpLayerNode.0*4)
	HCLBLAS_Set2DShape matX,N,mlpLayerNode.0

	gosub*kimeutiload
	
	gsel 0
	wait 1
	title "ロード終わり"
	wait 1
	
	gosub*loadwv
	//b,zを作る
	//a,yはb,zの最後の要素に対応
	dim64 matB,mlpLayerNum-1
	dim64 matZ,mlpLayerNum-1
	dim64 matBNB,mlpLayerNum-2
	
		repeat mlpLayerNum-1
		matB.cnt=HCLCreateBuffer(N*mlpLayerNode.(cnt+1)*4)
		HCLBLAS_Set2DShape matB.cnt,N,mlpLayerNode.(cnt+1)
		matZ.cnt=HCLCreateBuffer(N*mlpLayerNode.(cnt+1)*4)
		HCLBLAS_Set2DShape matZ.cnt,N,mlpLayerNode.(cnt+1)
		loop
	//Batch normの出力変数
		repeat mlpLayerNum-2
		matBNB.cnt=HCLCreateBuffer(N*mlpLayerNode.(cnt+1)*4)
		HCLBLAS_Set2DShape matBNB.cnt,N,mlpLayerNode.(cnt+1)
		loop
	//Batch norm計算クラス＝モジュール変数
		repeat mlpLayerNum-2
		newmod BN,BatchNormalization,mlpLayerNode.(cnt+1),cnt+1,"学習後\\"
		loop

	gosub*FNNmain



	HCLdim_fpFromBuffer result,matZ.(mlpLayerNum-2)
	gsel 0
	title "結果処理中"
	wait 1


	sdim outstr,65536*16
		repeat N
		w=cnt
		maxd=float(0)
		maxi=-1
			repeat 102
			sc=result.(w*102+cnt)
			if maxd<sc{
				maxd=sc
				maxi=cnt
			}
			loop
		outstr+=SKLALLSTR.maxi+"\n"
		loop
	
	pos 0,0
	mesbox outstr,630,470,5
	stop


*FNNmain
	HCLBLAS_sgemm matB.0,matX.0,matWV.0
	
		repeat mlpLayerNum-2
		BNforwrd BN.cnt,matB.cnt,matBNB.cnt,0
		HCLDoXf "A[i]=max(B[i],0.0f);",matZ.cnt,matBNB.cnt
		HCLBLAS_sgemm matB.(cnt+1),matZ.cnt,matWV.(cnt+1)
		loop
	
	AToY matB.(mlpLayerNum-2),matZ.(mlpLayerNum-2)
	return


*loadwv
	exist "学習後\\WV0.npy"
	dim host_wv,strsize/4
	bload "学習後\\WV0.npy",host_wv
	
	offsetread=0
	dim64 matWV,mlpLayerNum-1
		repeat mlpLayerNum-1
		sz=mlpLayerNode.cnt*mlpLayerNode.(cnt+1)*4
		matWV.cnt=HCLCreateBuffer(sz)
		HCLWriteBuffer matWV.cnt,host_wv,sz,0,128+offsetread
		HCLBLAS_Set2DShape matWV.cnt,mlpLayerNode.(cnt+1),mlpLayerNode.cnt
		matWV.cnt=HCLBLAS_sT(matWV.cnt)
		offsetread+=sz
		loop
	return


//101-114決め打ちロード
*kimeutiload
	buffer 1
		repeat N/2
		picload "H:\\mhrchap\\113\\"+cnt+".png"
		memG=int64(gselToBufferFloat1(1))
		clmemgcopy matX,memG,752+10,271+5,cnt*2
		clmemgcopy matX,memG,752+10,271+5+51,cnt*2+1
		HCLReleaseBuffer memG
		loop
	
	return



#module
#deffunc clmemgcopy var dst,var src,int x,int y,int ccnt
	yy=720-22-y
		repeat 22
		HCLCopyBuffer dst,src,128*4,ccnt*128*22*4+cnt*128*4,((yy+cnt)*1280+x)*4
		loop
	return

#global