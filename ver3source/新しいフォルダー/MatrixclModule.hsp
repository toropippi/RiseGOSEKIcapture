#module CLMatrix clmem,raw,col

#modinit int raw_,int col_
	clmem=HCLCreateBuffer(raw_*col_*4)
	raw=raw_
	col=col_
	return

#modterm
	HCLReleaseBuffer clmem
	return

#modfunc CLMview
	lmx=limit(col,1,10)
	lmy=limit(raw,1,12)
		repeat lmy
		ccmt=cnt
			repeat lmx
			pos cnt*79,ccmt*14
			data=HCLReadIndex_i32(clmem,cnt+raw*ccmt)
			mes strf("%3.5f",FloatToDouble(data))
			loop
		loop
	return

#modcfunc CLMmem
	return str(clmem)

#modcfunc CLMraw
	return raw

#modcfunc CLMcol
	return col

#modfunc CLMswap_Write var int64memid,int raw_,int col_
	clmem=int64memid
	raw=raw_
	col=col_
	return

//src→dstへコピー。dst情報は破棄される
#modfunc CLMcopy var src
	HCLReleaseBuffer clmem
	raw=CLMraw(src)
	col=CLMcol(src)
	clmem=HCLCreateBuffer(raw*col*4)
	HCLCopyBuffer clmem,int64(CLMmem(src))
	return


#global








#module _CLMswap_

#deffunc CLMswap var matB,var matC
	clmemid_c=int64(CLMmem(matC))
	raw_c=CLMraw(matC)
	col_c=CLMcol(matC)
	
	clmemid_b=int64(CLMmem(matB))
	raw_b=CLMraw(matB)
	col_b=CLMcol(matB)
	
	CLMswap_Write matB,clmemid_c,raw_c,col_c
	CLMswap_Write matC,clmemid_b,raw_b,col_b
	return

#global